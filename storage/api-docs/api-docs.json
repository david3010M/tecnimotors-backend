{
    "openapi": "3.0.0",
    "info": {
        "title": "API's Tecni Motors",
        "description": "API's for TecniMotors",
        "version": "1.0"
    },
    "paths": {
        "/tecnimotors-backend/public/api/attention": {
            "get": {
                "tags": [
                    "Attention"
                ],
                "summary": "Get all Attentions",
                "operationId": "f2308df8695a3bb2dbd5f41693d17a1a",
                "responses": {
                    "200": {
                        "description": "List of active Attentions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Attention"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/attention?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/attention?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/attention"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 15
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Attention"
                ],
                "summary": "Create a new ATTENTION",
                "operationId": "81d1fdc3b832238f1e85a493d69e9077",
                "requestBody": {
                    "description": "Attention data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "arrivalDate": {
                                        "description": "Date Attention",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-03-13"
                                    },
                                    "deliveryDate": {
                                        "description": "Date Attention",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-03-13"
                                    },
                                    "observations": {
                                        "type": "string",
                                        "example": "-"
                                    },
                                    "fuelLevel": {
                                        "type": "string",
                                        "example": "10"
                                    },
                                    "km": {
                                        "type": "string",
                                        "example": "0.00"
                                    },
                                    "vehicle_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "worker_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "details": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "service_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "worker_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "elements": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "detailsProducts": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "idProduct": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Element created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attention"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/attention/{id}": {
            "get": {
                "tags": [
                    "Attention"
                ],
                "summary": "Get a single Attention",
                "operationId": "7fe3b5c0f632274e8be44ee74a6652de",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Attention ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attention data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attention"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Attention not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Attention not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Attention"
                ],
                "summary": "Update a attention",
                "operationId": "ecd030130da7640e4c9bcbcfff77d3a8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the attention",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "vehicle_id",
                                    "worker_id"
                                ],
                                "properties": {
                                    "arrivalDate": {
                                        "description": "Date Attention",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-03-13"
                                    },
                                    "deliveryDate": {
                                        "description": "Date Attention",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-03-13"
                                    },
                                    "observations": {
                                        "type": "string",
                                        "example": "-"
                                    },
                                    "fuelLevel": {
                                        "type": "string",
                                        "example": "2"
                                    },
                                    "km": {
                                        "type": "string",
                                        "example": "0.00"
                                    },
                                    "vehicle_id": {
                                        "type": "string",
                                        "example": 1
                                    },
                                    "worker_id": {
                                        "type": "string",
                                        "example": 1
                                    },
                                    "details": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "idDetail": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "service_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "worker_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "detailsProducts": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "idDetail": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "idProduct": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "elements": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "attention updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeAttention"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "attention not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "attention not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Attention"
                ],
                "summary": "Delete an Attention",
                "operationId": "d5b31e808fa13f6de45c72317b51ed0d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Attention ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attention deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Attention deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Attention not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Attention not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Attention has attentions for attention",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Attention has attentions for attention"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/searchByNumber/{number}": {
            "get": {
                "tags": [
                    "Attention"
                ],
                "summary": "Get a single Attention by number",
                "operationId": "4d226b51eb1f080a5545a92ef537f101",
                "parameters": [
                    {
                        "name": "number",
                        "in": "path",
                        "description": "Attention number in the format OTRS-00000001",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "OTRS-00000001"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attention data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attention"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Attention not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Attention not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/bank": {
            "get": {
                "tags": [
                    "Bank"
                ],
                "summary": "Get all banks with pagination",
                "operationId": "3ad8871730d58751913f4bf6e3c71ba0",
                "responses": {
                    "200": {
                        "description": "List of active banks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Bank"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/bank?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/bank?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/bank"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 15
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Bank"
                ],
                "summary": "Store a newly created bank in storage.",
                "operationId": "2c87c1cf6da4749d47a04b9321d8fae5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BankRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bank created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bank"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/bank/{id}": {
            "get": {
                "tags": [
                    "Bank"
                ],
                "summary": "Display the specified bank.",
                "operationId": "e60126bf11184cd24ed0e64a49f5135e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bank ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bank"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bank not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bank not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Bank"
                ],
                "summary": "Update the specified bank in storage.",
                "operationId": "b0a108be3d47d69a4f23d3c4bf4d0653",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bank ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BankRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bank updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bank"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bank not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bank not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Bank"
                ],
                "summary": "Remove the specified bank from storage.",
                "operationId": "d5fc6e362c45869a56a845a4614798d4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bank ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bank deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bank not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bank not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/brand": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Get all Brands",
                "operationId": "03abecc89bf5f81091aff45060d4be23",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of the Brand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "vehicle",
                                "product"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of active Brands",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Brand"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/brand?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/brand?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/brand"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 15
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Brand"
                ],
                "summary": "Create a new Brand",
                "operationId": "9abafb651d21b359f03d2cd8a39b7677",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Brand 1"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "vehicle"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Brand created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/brand/{id}": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Get a Brand",
                "operationId": "15e1e5424310d1e2d44f5b8bbab70175",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Brand",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Brand not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Brand"
                ],
                "summary": "Update a Brand",
                "operationId": "2bee8cfd54118a3ab2e5cddbc7a06d29",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Brand",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Brand 1"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "vehicle"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Brand updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Brand not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Brand"
                ],
                "summary": "Delete a Brand",
                "operationId": "74b16e26f3536b03007e336756544d5b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Brand",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Brand deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Brand not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Brand has asssoications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Brand has vehicles"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/budgetSheet": {
            "get": {
                "tags": [
                    "BudgetSheet"
                ],
                "summary": "Get all BudgetSheets",
                "operationId": "d941e2364484cf52c950d8b945b338fb",
                "responses": {
                    "200": {
                        "description": "List of active BudgetSheets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BudgetSheet"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/budgetSheet?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/budgetSheet?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/budgetSheet"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 15
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "BudgetSheet"
                ],
                "summary": "Create a new BudgetSheet",
                "operationId": "9d81e7fca6604a4ab137141eee1e5c5f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "attention_id"
                                ],
                                "properties": {
                                    "attention_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "paymentType": {
                                        "type": "string",
                                        "example": "Al Contado"
                                    },
                                    "percentageDiscount": {
                                        "type": "decimal",
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "BudgetSheet created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BudgetSheet"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/budgetSheet/{id}": {
            "get": {
                "tags": [
                    "BudgetSheet"
                ],
                "summary": "Get a single BudgetSheet",
                "operationId": "85b4f0c0adb97ab9e9a69ed6f88a7157",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BudgetSheet ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BudgetSheet data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BudgetSheet"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "BudgetSheet not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "BudgetSheet not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "BudgetSheet"
                ],
                "summary": "Delete an BudgetSheet",
                "operationId": "dbb82aa7e4e2b5dadc969572414e9536",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BudgetSheet ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BudgetSheet deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "BudgetSheet deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "BudgetSheet not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "BudgetSheet not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "BudgetSheet has budgetSheets for attention",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "BudgetSheet has budgetSheets for attention"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/budgedSheet/{id}": {
            "put": {
                "tags": [
                    "BudgetSheet"
                ],
                "summary": "Update a budgedSheet",
                "operationId": "4a772e119fa9854414416e44747b69c5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the budgetSheet",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "attention_id"
                                ],
                                "properties": {
                                    "paymentType": {
                                        "type": "string",
                                        "example": "Al Contado"
                                    },
                                    "percentageDiscount": {
                                        "type": "decimal",
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "attention updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeAttention"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "attention not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "attention not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/category": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get all Categories",
                "operationId": "8cb661581415a4660b3a12a52bfdb990",
                "responses": {
                    "200": {
                        "description": "List of active Categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/category?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/category?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/category"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 15
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create a new Category",
                "operationId": "b7a390d58789bf29d4e71c3a094dce95",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/category/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get a Category",
                "operationId": "1b1908d69069b4ed848f4b5741559b9b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update a Category",
                "operationId": "56d781fb1da6c9891bbef646f4772deb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete a Category",
                "operationId": "6d70105b068da4a896eeb5f4896a2bc5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Category cannot be deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category cannot be deleted because it has products"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/commitment": {
            "get": {
                "tags": [
                    "Commitment"
                ],
                "summary": "Show all commitments",
                "description": "SHOW ALL COMMITMENTS",
                "operationId": "8bc1e6a0d967b01490631e8160f9bd56",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show all commitments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommitmentCollectionPagination"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Commitment"
                ],
                "summary": "Create a commitment",
                "operationId": "d96863cce01551502662c41b8cb56554",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommitmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create a commitment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Commitment"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Budget sheet not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/commitment/{id}": {
            "get": {
                "tags": [
                    "Commitment"
                ],
                "summary": "Show a commitment",
                "operationId": "74e2be67899c5fb6377c6b32e7911fff",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commitment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show a commitment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Commitment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Commitment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Commitment"
                ],
                "summary": "Update a commitment",
                "operationId": "50c4f9d83dc70e3b679a105ea897a78a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commitment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommitmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update a commitment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Commitment"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Commitment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Commitment"
                ],
                "summary": "Delete a commitment",
                "operationId": "03bccc0fd88945d4dcb03f2aac86b6fb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Commitment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete a commitment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commitment deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Commitment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/conceptMov": {
            "get": {
                "tags": [
                    "ConceptMovs"
                ],
                "summary": "Get all ConceptMovs with pagination",
                "operationId": "bb056f762e81979f23deec9246f6230e",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ConceptMov"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/conceptMov?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/conceptMov?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/conceptMov"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": "15"
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ConceptMovs"
                ],
                "summary": "Store a newly created ConceptMov in storage.",
                "operationId": "cc1f2103646a9045097b9c93008c9fb6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConceptMovRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConceptMov"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/conceptMov/{id}": {
            "get": {
                "tags": [
                    "ConceptMovs"
                ],
                "summary": "Display the specified ConceptMov.",
                "operationId": "7835a3ea2e6a02cf921b5f311a2cff7e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ConceptMov id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConceptMov"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ConceptMov not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ConceptMovs"
                ],
                "summary": "Update the specified ConceptMov in storage.",
                "operationId": "428d5b0db4ba9f7f99ab8bf7af4afbcb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ConceptMov id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConceptMovRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConceptMov"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ConceptMov not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ConceptMovs"
                ],
                "summary": "Remove the specified ConceptMov from storage.",
                "operationId": "602a1fdb15dddb9386610bd7e9626e6e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ConceptMov id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ConceptMov deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ConceptMov not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/conceptPay": {
            "get": {
                "tags": [
                    "ConceptPay"
                ],
                "summary": "Get all ConceptPays",
                "operationId": "325603933cde63c0b96cfce2c18bc567",
                "responses": {
                    "200": {
                        "description": "List of active ConceptPays",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ConceptPay"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/conceptPay?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/conceptPay?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/conceptPay"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 15
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ConceptPay"
                ],
                "summary": "Create a new ConceptPay",
                "operationId": "a1d413b0d46dfccffbedbf08404029c2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConceptPayRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ConceptPay created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConceptPay"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/conceptPay/{id}": {
            "get": {
                "tags": [
                    "ConceptPay"
                ],
                "summary": "Get a ConceptPay",
                "operationId": "6ab37a4867c643f1c7dceb8dc3d19799",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ConceptPay Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConceptPay detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConceptPay"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ConceptPay not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ConceptPay not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ConceptPay"
                ],
                "summary": "Update a ConceptPay",
                "operationId": "aa5d1cc7aa5c24d4f33cb0dabaa43879",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ConceptPay Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConceptPayRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ConceptPay updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConceptPay"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ConceptPay not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ConceptPay not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ConceptPay"
                ],
                "summary": "Delete a ConceptPay",
                "operationId": "b3217c4f57703f4badff1d25674c5fed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ConceptPay Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConceptPay deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ConceptPay deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ConceptPay not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ConceptPay not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/detailAttention/{id}": {
            "get": {
                "tags": [
                    "DetailAttention"
                ],
                "summary": "List all Detail Attention",
                "description": "List all Detail Attention",
                "operationId": "detailAttention",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Detail Attention",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detailAttention": {
                                            "$ref": "#/components/schemas/DetailAttentionNoRelations"
                                        },
                                        "observation": {
                                            "type": "string",
                                            "example": "Observation"
                                        },
                                        "product": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProductNoRelations"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Detail Attention not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Detail Attention not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "DetailAttention"
                ],
                "summary": "Update the specified detailAttention in storage.",
                "operationId": "4cb1401367c140204a373eda3b8f7719",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "DetailAttention ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DetailAttentionRequestUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "DetailAttention updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DetailAttentionNoRelations"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "DetailAttention not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "DetailAttention not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/detailAttentionByWorker/{id}": {
            "get": {
                "tags": [
                    "DetailAttention"
                ],
                "summary": "List all Detail Attention by Worker",
                "description": "List all Detail Attention by Worker",
                "operationId": "detailAttentionByWorker",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of worker",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DetailAttentionServicePaginate"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Detail Attention not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Detail Attention not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/detailAttentionStart/{id}": {
            "post": {
                "tags": [
                    "DetailAttention"
                ],
                "summary": "Start Detail Attention",
                "description": "Start Detail Attention",
                "operationId": "start",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Detail Attention",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detailAttention": {
                                            "$ref": "#/components/schemas/DetailAttentionNoRelations"
                                        },
                                        "observation": {
                                            "type": "string",
                                            "example": "Observation"
                                        },
                                        "product": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProductNoRelations"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Detail Attention not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Detail Attention not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/detailAttentionFinish/{id}": {
            "post": {
                "tags": [
                    "DetailAttention"
                ],
                "summary": "Finish Detail Attention",
                "description": "Finish Detail Attention",
                "operationId": "finish",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Detail Attention",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detailAttention": {
                                            "$ref": "#/components/schemas/DetailAttentionNoRelations"
                                        },
                                        "observation": {
                                            "type": "string",
                                            "example": "Observation"
                                        },
                                        "product": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProductNoRelations"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Detail Attention not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Detail Attention not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/element": {
            "get": {
                "tags": [
                    "Element"
                ],
                "summary": "Get all Elements",
                "operationId": "9d3f824af4a8e7a4393a31f78debbae6",
                "responses": {
                    "200": {
                        "description": "List of active Elements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Element"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/element?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/element?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/element"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 15
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Element"
                ],
                "summary": "Create a new Element",
                "operationId": "c0359dc7cfd135702485ca6bd63a9bd3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Element 1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Element created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Element"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/element/{id}": {
            "get": {
                "tags": [
                    "Element"
                ],
                "summary": "Get a single Element",
                "operationId": "cc90fb4a8884f7657e87f64f8407b7cc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Element data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Element"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Element not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Element not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Element"
                ],
                "summary": "Update an Element",
                "operationId": "46dfc160ed860879814684cf4feeb2c1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Element 2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Element updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Element"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Element not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Element not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Element"
                ],
                "summary": "Delete an Element",
                "operationId": "93d74bc6fa099d52a492387426eb82b4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Element deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Element deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Element not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Element not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Element has elements for attention",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Element has elements for attention"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/elementForAttention": {
            "get": {
                "tags": [
                    "ElementForAttention"
                ],
                "summary": "Get all Elements",
                "operationId": "0346181471804ff1079828d745fb2146",
                "responses": {
                    "200": {
                        "description": "List of active Elements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ElementForAttention"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/elementForAttention?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/elementForAttention?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/elementForAttention"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 15
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ElementForAttention"
                ],
                "summary": "Create a new Element",
                "operationId": "014ae2960fa9201e047b7d525e7004ce",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "element_id",
                                    "attention_id"
                                ],
                                "properties": {
                                    "element_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "attention_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Element created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ElementForAttention"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/elementForAttention/{id}": {
            "get": {
                "tags": [
                    "ElementForAttention"
                ],
                "summary": "Get a single Element",
                "operationId": "341f28a43d3252f87d317c3e91c56e78",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Element data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ElementForAttention"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Element not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Element not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ElementForAttention"
                ],
                "summary": "Update a elementForAttention",
                "operationId": "99b8086a469d04734cf7c6bb82a1f814",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Element For Attention",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "element_id",
                                    "attention_id"
                                ],
                                "properties": {
                                    "element_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "attention_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "elementForAttention updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ElementForAttention"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "elementForAttention not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "elementForAttention not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ElementForAttention"
                ],
                "summary": "Delete an Element",
                "operationId": "1727f2c1ecdd3f0ee6d7c464141ea28e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Element deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Element deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Element not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Element not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Element has elements for attention",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Element has elements for attention"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/groupmenu": {
            "get": {
                "tags": [
                    "Group Menu"
                ],
                "summary": "Get all Group menus",
                "operationId": "80f2a59eff04c7c6241dc6db9db763b9",
                "responses": {
                    "200": {
                        "description": "List of active Group Menus",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupMenu"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Group Menu"
                ],
                "summary": "Create a new Group menu",
                "operationId": "e99a382c11e61ba740b961577be26fa2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "icon"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Admin"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "fas fa-user"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "New Group Menu created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupMenu"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/groupmenu/{id}": {
            "get": {
                "tags": [
                    "Group Menu"
                ],
                "summary": "Show the specified Group menu",
                "operationId": "30cbd4eab110d79c33912a9cc0ade811",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Group Menu",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group Menu found"
                    },
                    "404": {
                        "description": "Group Menu not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Group Menu not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Group Menu"
                ],
                "summary": "Update the specified Group menu",
                "operationId": "f9b83a5773e047a3a2ca5ec5de30008c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Group Menu",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "icon"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Admin"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "fas fa-user"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Group Menu updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupMenu"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group Menu not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Group Menu not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Group Menu"
                ],
                "summary": "Remove the specified Group menu",
                "operationId": "4e9245108d3eac0086aa457dd6d2696c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Group Menu",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group Menu deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Group Menu deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group Menu not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Group Menu not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Group Menu has option menus associated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Group Menu has option menus associated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/moviment": {
            "get": {
                "tags": [
                    "Moviment"
                ],
                "summary": "Get all Movimentes",
                "operationId": "6155ae876b70b9cd6bcbb788ad3840c4",
                "parameters": [
                    {
                        "name": "paymentConcept_id",
                        "in": "query",
                        "description": "Nombre Concepto Pago",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "numberBudget",
                        "in": "query",
                        "description": "Numero Presupuesto",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of active Movimentes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detalle": {
                                            "properties": {
                                                "MovCajaApertura": {
                                                    "$ref": "#/components/schemas/MovimentRequest"
                                                },
                                                "MovCajaCierre": {
                                                    "$ref": "#/components/schemas/MovimentRequest"
                                                },
                                                "MovCajaInternos": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "data": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/MovimentRequest"
                                                            }
                                                        },
                                                        "first_page_url": {
                                                            "type": "string",
                                                            "example": "http://localhost/tecnimotors-backend/public/api/moviment?page=1"
                                                        },
                                                        "from": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "next_page_url": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "path": {
                                                            "type": "string",
                                                            "example": "http://localhost/tecnimotors-backend/public/api/moviment"
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "prev_page_url": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "to": {
                                                            "type": "integer",
                                                            "example": 2
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "resumenCaja": {
                                                    "properties": {
                                                        "total_ingresos": {
                                                            "type": "string",
                                                            "example": "150.50"
                                                        },
                                                        "total_egresos": {
                                                            "type": "string",
                                                            "example": "150.50"
                                                        },
                                                        "efectivo_ingresos": {
                                                            "type": "string",
                                                            "example": "50.00"
                                                        },
                                                        "efectivo_egresos": {
                                                            "type": "string",
                                                            "example": "50.00"
                                                        },
                                                        "yape_ingresos": {
                                                            "type": "string",
                                                            "example": "20.00"
                                                        },
                                                        "yape_egresos": {
                                                            "type": "string",
                                                            "example": "20.00"
                                                        },
                                                        "plin_ingresos": {
                                                            "type": "string",
                                                            "example": "0.00"
                                                        },
                                                        "plin_egresos": {
                                                            "type": "string",
                                                            "example": "50.00"
                                                        },
                                                        "tarjeta_ingresos": {
                                                            "type": "string",
                                                            "example": "0.50"
                                                        },
                                                        "tarjeta_egresos": {
                                                            "type": "string",
                                                            "example": "0.50"
                                                        },
                                                        "deposito_ingresos": {
                                                            "type": "string",
                                                            "example": "30.00"
                                                        },
                                                        "deposito_egresos": {
                                                            "type": "string",
                                                            "example": "30.00"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Moviment"
                ],
                "summary": "Store a new moviment",
                "description": "Create a new moviment",
                "operationId": "ac5f90e3c46cf848617d3f0ce9c15f17",
                "requestBody": {
                    "description": "Moviment data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "paymentDate": {
                                        "description": "Fecha de pago",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-06-17",
                                        "nullable": true
                                    },
                                    "paymentConcept_id": {
                                        "description": "ID del concepto de pago",
                                        "type": "integer",
                                        "example": 3,
                                        "nullable": true
                                    },
                                    "routeVoucher": {
                                        "description": "Imagen File",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": false
                                    },
                                    "numberVoucher": {
                                        "description": "Numero del voucher",
                                        "type": "string"
                                    },
                                    "isBankPayment": {
                                        "description": "0 Desactivado / 1 Activado",
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "yape": {
                                        "description": "Pago por Yape",
                                        "type": "number",
                                        "format": "decimal",
                                        "example": 20,
                                        "nullable": true
                                    },
                                    "deposit": {
                                        "description": "Depósito",
                                        "type": "number",
                                        "format": "decimal",
                                        "example": 30,
                                        "nullable": true
                                    },
                                    "cash": {
                                        "description": "Efectivo",
                                        "type": "number",
                                        "format": "decimal",
                                        "example": 50,
                                        "nullable": true
                                    },
                                    "plin": {
                                        "description": "Efectivo",
                                        "type": "number",
                                        "format": "decimal",
                                        "example": 50,
                                        "nullable": true
                                    },
                                    "card": {
                                        "description": "Pago por tarjeta",
                                        "type": "number",
                                        "format": "decimal",
                                        "example": 0.5,
                                        "nullable": true
                                    },
                                    "comment": {
                                        "description": "Comentario",
                                        "type": "string",
                                        "example": "Pago parcial",
                                        "nullable": true
                                    },
                                    "person_id": {
                                        "description": "ID de persona",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "bank_id": {
                                        "description": "ID del banko",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Moviment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MovimentRequest"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Some fields are required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/movimentAperturaCierre": {
            "post": {
                "tags": [
                    "Moviment"
                ],
                "summary": "Store a new moviment",
                "description": "Create a new moviment Apertura/Cierre",
                "operationId": "5298c46c464fce7445c367677953cb48",
                "requestBody": {
                    "description": "Moviment data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "paymentDate": {
                                        "description": "Fecha de pago",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-06-17",
                                        "nullable": true
                                    },
                                    "paymentConcept_id": {
                                        "description": "ID del concepto de pago",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "routeVoucher": {
                                        "description": "Imagen File",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": false
                                    },
                                    "numberVoucher": {
                                        "description": "Numero del voucher",
                                        "type": "string"
                                    },
                                    "isBankPayment": {
                                        "description": "0 Desactivado / 1 Activado",
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "yape": {
                                        "description": "Pago por Yape",
                                        "type": "number",
                                        "format": "decimal",
                                        "example": 20,
                                        "nullable": true
                                    },
                                    "deposit": {
                                        "description": "Depósito",
                                        "type": "number",
                                        "format": "decimal",
                                        "example": 30,
                                        "nullable": true
                                    },
                                    "cash": {
                                        "description": "Efectivo",
                                        "type": "number",
                                        "format": "decimal",
                                        "example": 50,
                                        "nullable": true
                                    },
                                    "plin": {
                                        "description": "Efectivo",
                                        "type": "number",
                                        "format": "decimal",
                                        "example": 50,
                                        "nullable": true
                                    },
                                    "card": {
                                        "description": "Pago por tarjeta",
                                        "type": "number",
                                        "format": "decimal",
                                        "example": 0.5,
                                        "nullable": true
                                    },
                                    "comment": {
                                        "description": "Comentario",
                                        "type": "string",
                                        "example": "Pago parcial",
                                        "nullable": true
                                    },
                                    "person_id": {
                                        "description": "ID de persona",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "bank_id": {
                                        "description": "ID del banko",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Moviment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MovimentRequest"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Some fields are required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/moviment/{id}": {
            "get": {
                "tags": [
                    "Moviment"
                ],
                "summary": "Get a moviment by ID",
                "description": "Retrieve a moviment by its ID",
                "operationId": "75ecdb6371ef132f583b8bee60caadca",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the moviment to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Moviment found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MovimentRequest"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Moviment"
                ],
                "summary": "Delete a Moviment",
                "description": "Delete a Moviment by ID",
                "operationId": "800365dae8da4541ca35e0969cc73dc0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Moviment to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Moviment deleted successfully"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/optionMenu": {
            "get": {
                "tags": [
                    "Option Menu"
                ],
                "summary": "Get all Option Menus",
                "operationId": "c5ce1c9f88d0f28764a96dda0e626ab6",
                "responses": {
                    "200": {
                        "description": "List of active Option Menus",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OptionMenu"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Option Menu"
                ],
                "summary": "Create a new Option Menu",
                "operationId": "6df753a074d78864f36b980f14518707",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "route",
                                    "icon"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Admin"
                                    },
                                    "route": {
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "fas fa-user"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "New Option Menu created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OptionMenu"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/optionMenu/{id}": {
            "get": {
                "tags": [
                    "Option Menu"
                ],
                "summary": "Show the specified Option Menu",
                "operationId": "9fa533935d6feabd15e1f9b8358c4686",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Option Menu",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Option Menu found"
                    },
                    "404": {
                        "description": "Option Menu not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Option Menu not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Option Menu"
                ],
                "summary": "Update the specified Group menu",
                "operationId": "4aca3551d4a54352c067fb1624ece5b5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Option Menu",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "icon",
                                    "route",
                                    "order"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Admin"
                                    },
                                    "route": {
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "fas fa-user"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Option Menu updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OptionMenu"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Option Menu not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Option Menu not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Option Menu"
                ],
                "summary": "Remove the specified Option Menu",
                "operationId": "ae3ea122fd6c817f5790deff5733f931",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Option Menu",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Option Menu deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Option Menu deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Option Menu not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Option Menu not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/reportCaja": {
            "get": {
                "tags": [
                    "Reporte"
                ],
                "summary": "Exportar Reporte Caja",
                "description": "Genera y descarga una Reporte Caja Aperturada en formato PDF",
                "operationId": "39720a474474f5faf9074b2a76bbcc33",
                "responses": {
                    "200": {
                        "description": "Reporte Caja en formato PDF",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error en los datos",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error en los datos"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/person": {
            "get": {
                "tags": [
                    "Person"
                ],
                "summary": "Get all Persons",
                "operationId": "fe70677103312908179fbcdb6bbe6065",
                "responses": {
                    "200": {
                        "description": "List of active Persons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Person"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Person"
                ],
                "summary": "Store a new person",
                "operationId": "776a3a79382650f7d0e3dd7ba1d048ab",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "typeofDocument",
                                    "documentNumber"
                                ],
                                "properties": {
                                    "typeofDocument": {
                                        "description": "Type of Document",
                                        "type": "string",
                                        "example": "DNI"
                                    },
                                    "documentNumber": {
                                        "description": "Document Number",
                                        "type": "string",
                                        "example": "12345678"
                                    },
                                    "names": {
                                        "description": "Names",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "fatherSurname": {
                                        "description": "Father's Surname",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "motherSurname": {
                                        "description": "Mother's Surname",
                                        "type": "string",
                                        "example": "Smith"
                                    },
                                    "businessName": {
                                        "description": "Business Name",
                                        "type": "string",
                                        "example": "Doe Enterprises"
                                    },
                                    "representativeDni": {
                                        "description": "Representative's DNI",
                                        "type": "string",
                                        "example": "87654321"
                                    },
                                    "representativeNames": {
                                        "description": "Representative's Names",
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "address": {
                                        "description": "Address",
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "phone": {
                                        "description": "Phone Number",
                                        "type": "string",
                                        "example": "+123456789"
                                    },
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "example": "example@example.com"
                                    },
                                    "origin": {
                                        "description": "Origin",
                                        "type": "string",
                                        "example": "USA"
                                    },
                                    "ocupation": {
                                        "description": "Occupation",
                                        "type": "string",
                                        "example": "Engineer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Person created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Person not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Person not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/person/{id}": {
            "get": {
                "tags": [
                    "Person"
                ],
                "summary": "Show the specified Person",
                "operationId": "c08abf3369f0fd0d3c7161c0abb6afec",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Person",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Person found"
                    },
                    "404": {
                        "description": "Person not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Person not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Person"
                ],
                "summary": "Update person by ID",
                "operationId": "f010886656452655f830e4a69e13b4bc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of person",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "typeofDocument",
                                    "documentNumber"
                                ],
                                "properties": {
                                    "typeofDocument": {
                                        "description": "Type of Document",
                                        "type": "string",
                                        "example": "DNI"
                                    },
                                    "documentNumber": {
                                        "description": "Document Number",
                                        "type": "string",
                                        "example": "12345678"
                                    },
                                    "names": {
                                        "description": "Names",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "fatherSurname": {
                                        "description": "Father's Surname",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "motherSurname": {
                                        "description": "Mother's Surname",
                                        "type": "string",
                                        "example": "Smith"
                                    },
                                    "businessName": {
                                        "description": "Business Name",
                                        "type": "string",
                                        "example": "Doe Enterprises"
                                    },
                                    "representativeDni": {
                                        "description": "Representative's DNI",
                                        "type": "string",
                                        "example": "87654321"
                                    },
                                    "representativeNames": {
                                        "description": "Representative's Names",
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "address": {
                                        "description": "Address",
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "phone": {
                                        "description": "Phone Number",
                                        "type": "string",
                                        "example": "+123456789"
                                    },
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "example": "example@example.com"
                                    },
                                    "origin": {
                                        "description": "Origin",
                                        "type": "string",
                                        "example": "USA"
                                    },
                                    "ocupation": {
                                        "description": "Occupation",
                                        "type": "string",
                                        "example": "Engineer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Person or User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Person"
                ],
                "summary": "Remove the specified Person",
                "operationId": "de425df1a690ea4b2d22bd54c88979b3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Person",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Person deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Person deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Person not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Person not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/product": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get all products",
                "description": "Get all products with simple pagination",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "Return all products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/products?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/products?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/products"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 15
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Create a new product",
                "description": "Create a new product",
                "operationId": "store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return product created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/product/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get a product",
                "operationId": "4c2157b1d87423afe1fa843661f6cac4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return a product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Update a product",
                "operationId": "1b31b752fdd66acdef649c0df0af724c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return product updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete a product",
                "operationId": "6a813be2b3859c18eb8876f2b1362f16",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Product has stock",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product has stock"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/searchByDni/{dni}": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Search information by DNI",
                "description": "Search information about a person by their DNI number.",
                "operationId": "7bf10fa2b6c8cc37228acccdd95696cd",
                "parameters": [
                    {
                        "name": "dni",
                        "in": "path",
                        "description": "DNI number of the person to search",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information found successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "code": {
                                                "type": "integer",
                                                "example": 0
                                            },
                                            "dni": {
                                                "type": "string",
                                                "example": "string"
                                            },
                                            "apepat": {
                                                "type": "string",
                                                "example": "string"
                                            },
                                            "apemat": {
                                                "type": "string",
                                                "example": "string"
                                            },
                                            "apcas": {
                                                "type": "string",
                                                "example": ""
                                            },
                                            "nombres": {
                                                "type": "string",
                                                "example": "string"
                                            },
                                            "fecnac": {
                                                "type": "string",
                                                "format": "date"
                                            },
                                            "ubigeo": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/searchByRuc/{ruc}": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Search information by RUC",
                "description": "Search information about a person by their RUC number.",
                "operationId": "0cd43cd06e3d475a4b29c800d8c77831",
                "parameters": [
                    {
                        "name": "ruc",
                        "in": "path",
                        "description": "RUC number of the person to search",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information found successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "code": {
                                                "type": "integer",
                                                "example": 0
                                            },
                                            "RUC": {
                                                "type": "string",
                                                "example": "string"
                                            },
                                            "RazonSocial": {
                                                "type": "string",
                                                "example": "string"
                                            },
                                            "Direccion": {
                                                "type": "string",
                                                "example": "string"
                                            },
                                            "Tipo": {
                                                "type": "string"
                                            },
                                            "Inscripcion": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/sendSheetByWhatsapp": {
            "post": {
                "tags": [
                    "WhatsApp"
                ],
                "summary": "Send sheet service information via WhatsApp",
                "operationId": "f8662fb138b1621ef27bfd93bb1efd7d",
                "requestBody": {
                    "description": "Data for sending sheet service information via WhatsApp",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "idAttention",
                                    "phone_number"
                                ],
                                "properties": {
                                    "idAttention": {
                                        "description": "The ID of the attention.",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "phone_number": {
                                        "description": "The phone number to send the message to.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "WhatsApp message sent successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed: The idAttention field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/sendBudgetSheetByWhatsapp": {
            "post": {
                "tags": [
                    "WhatsApp"
                ],
                "summary": "Send budget sheet information via WhatsApp",
                "operationId": "4f0dd6fdc7d00efbeb23acd7582c8b72",
                "requestBody": {
                    "description": "Data for sending budget sheet information via WhatsApp",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "idAttention",
                                    "phone_number"
                                ],
                                "properties": {
                                    "idBudgetSheet": {
                                        "description": "The ID of the budget sheet.",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "phone_number": {
                                        "description": "The phone number to send the message to.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "WhatsApp message sent successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed: The idAttention field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/service": {
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "Get all Services",
                "operationId": "d73a345290230f8bd45266683e330422",
                "responses": {
                    "200": {
                        "description": "List of active Services",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Service"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/service?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/service?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/service"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 15
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Service"
                ],
                "summary": "Create a new Service",
                "operationId": "db6f89bda94b770fbf624d3793e0cb52",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/service/{id}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "Get a specific Service",
                "operationId": "0c958a85b0ba310ee498d47bef7cfafd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Service"
                ],
                "summary": "Update a specific Service",
                "operationId": "0c30b0f85b0b8803708a261c15a4600c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Service"
                ],
                "summary": "Delete a specific Service",
                "operationId": "da74d58e522269e986f9fce7f9a75b83",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Service cannot be deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service cannot be deleted because it is related to a detail budget"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/specialty": {
            "get": {
                "tags": [
                    "Specialty"
                ],
                "summary": "Get all Specialties",
                "operationId": "0b12f6bdf2dcf88af391e7d054498983",
                "responses": {
                    "200": {
                        "description": "List of active Specialties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Specialty"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Specialty"
                ],
                "summary": "Store a new specialty",
                "operationId": "907f82e6656bf4045844c72b36b4ca07",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "person_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name",
                                        "type": "string",
                                        "example": "Especialidad 1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Specialty"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/specialty/{id}": {
            "get": {
                "tags": [
                    "Specialty"
                ],
                "summary": "Show the specified Specialty",
                "operationId": "f82f87814ceb592f92aac89434efe82d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Specialty",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Specialty found"
                    },
                    "404": {
                        "description": "Specialty not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Specialty not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Specialty"
                ],
                "summary": "Update specialty by ID",
                "operationId": "aafa09dac78e5da0ff7e8c9a995bc326",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of specialty",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "person_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name",
                                        "type": "string",
                                        "example": "Espcialidad 2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Specialty"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Specialty"
                ],
                "summary": "Remove the specified Specialty",
                "operationId": "5fb29ee4becad3d9f9f5997e3fa0aa70",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Specialty",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Specialty deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Specialty deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specialty not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Specialty not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/specialtyPerson": {
            "get": {
                "tags": [
                    "SpecialtyPerson"
                ],
                "summary": "Get all Specialties",
                "operationId": "3f7ea719f80d4c2e4f77adc309d27fed",
                "responses": {
                    "200": {
                        "description": "List of active Specialties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SpecialtyPerson"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "SpecialtyPerson"
                ],
                "summary": "Create a new SpecialtyPerson",
                "operationId": "5970edbe14a2fbe4dd6033f1e47a4345",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "specialty_id": {
                                        "description": "Specialty ID",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "worker_id": {
                                        "description": "Worker ID",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "SpecialtyPerson created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecialtyPerson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/SpecialtyPerson/{id}": {
            "get": {
                "tags": [
                    "SpecialtyPerson"
                ],
                "summary": "Show the specified SpecialtyPerson",
                "operationId": "1efc69e70ee2795df5b9b11292412ca0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the SpecialtyPerson",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SpecialtyPerson found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecialtyPerson"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SpecialtyPerson not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "SpecialtyPerson not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "SpecialtyPerson"
                ],
                "summary": "Remove the specified SpecialtyPerson",
                "operationId": "96debe24ea087889aed2b8500ddc0310",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the SpecialtyPerson",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SpecialtyPerson deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "SpecialtyPerson deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SpecialtyPerson not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "SpecialtyPerson not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/specialtyPerson/{id}": {
            "put": {
                "tags": [
                    "SpecialtyPerson"
                ],
                "summary": "Update a Specialty Person",
                "operationId": "2644c12e514b90ae0ee498305c8b74d1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Specialty Person",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "specialty_id": {
                                        "description": "Specialty ID",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "worker_id": {
                                        "description": "Worker ID",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Specialty Person updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecialtyPerson"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Specialty Person not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Specialty Person not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/supplier": {
            "get": {
                "tags": [
                    "Supplier"
                ],
                "summary": "Get all suppliers",
                "operationId": "ef8841c2fcb190cb7145e15d72cbb380",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Supplier"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/supplier?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/supplier?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/supplier"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": "15"
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": "15"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Supplier"
                ],
                "summary": "Store a newly created supplier in storage.",
                "operationId": "239a41c17438e487fc8de105f82c82f1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The date field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/supplier/{id}": {
            "get": {
                "tags": [
                    "Supplier"
                ],
                "summary": "Display the specified supplier.",
                "operationId": "bc91e419bad2677d8517436e20f0fdc7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Supplier ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Supplier"
                ],
                "summary": "Update the specified supplier in storage.",
                "operationId": "a3fd88a0df12b183136e0f999f94e7f2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Supplier ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Supplier not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The date field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/task": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Store a task",
                "description": "Store a task",
                "operationId": "storeTask",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "La fecha Límite de la Tarea debe ser menor que la Fecha de entrega del Vehículo"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/task/{id}": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Show a task",
                "description": "Show a task",
                "operationId": "showTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of task",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Task"
                ],
                "summary": "Update a task",
                "description": "Update a task",
                "operationId": "updateTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of task",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "La fecha Límite de la Tarea debe ser menor que la Fecha de entrega del Vehículo"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Task"
                ],
                "summary": "Delete a task",
                "description": "Delete a task",
                "operationId": "destroyTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of task",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/taskByDetailAttention/{id}": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "List all Tasks by Detail Attention",
                "description": "List all Tasks by Detail Attention",
                "operationId": "taskByDetailAttention",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of detail attention",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TaskNoRelations"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tasks not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tasks not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/taskEvidence/{id}": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Store the evidence of a task",
                "description": "Store the evidence of a task",
                "operationId": "storeEvidence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of task",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "routeImage[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "file",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "url": {
                                            "type": "string",
                                            "example": "http://localhost:8000/storage/photosTaskEvidence/1/image.jpg"
                                        },
                                        "task_id": {
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/typeAttention": {
            "get": {
                "tags": [
                    "Type Attention"
                ],
                "summary": "Get all Type Attentions",
                "operationId": "cc9c28880d46ace086b2611e1958e35c",
                "responses": {
                    "200": {
                        "description": "List of active Type Attentions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TypeAttention"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/typeattention?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/typeattention?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/typeattention"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 15
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Type Attention"
                ],
                "summary": "Create a new Type Attention",
                "operationId": "eefcedd44ee4d0b98b3b5f94b189dddd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Consulta"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Type Attention created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeAttention"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/typeAttention/{id}": {
            "get": {
                "tags": [
                    "Type Attention"
                ],
                "summary": "Show a Type Attention",
                "operationId": "f85433cbc6a41d90bb260923202285be",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Type Attention",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Type Attention found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeAttention"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Type Attention not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Type Attention not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Type Attention"
                ],
                "summary": "Update a Type Attention",
                "operationId": "94b1ace24d8bf5d40d00f00320cd4aa7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Type Attention",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Consulta"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Type Attention updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeAttention"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Type Attention not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Type Attention not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Type Attention"
                ],
                "summary": "Delete a Type Attention",
                "operationId": "ec529d754190be52f9eb72231ffcd245",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Type Attention",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Type Attention deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Type Attention deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Type Attention not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Type Attention not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/typeUser": {
            "get": {
                "tags": [
                    "TypeUser"
                ],
                "summary": "Get all TypeUsers",
                "operationId": "650827ce47efd20759d56bceb711e19c",
                "responses": {
                    "200": {
                        "description": "List of active TypeUsers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TypeUser"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "TypeUser"
                ],
                "summary": "Create a new Type User",
                "operationId": "d9a1575aacfc135f28f7517b5c3ee80b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "New Type User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeUser"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/typeUser/{id}": {
            "get": {
                "tags": [
                    "TypeUser"
                ],
                "summary": "Show the specified TypeUser",
                "operationId": "91e2080b28ffd0c722cbb7a58033f095",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the TypeUser",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TypeUser found"
                    },
                    "404": {
                        "description": "TypeUser not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "TypeUser not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "TypeUser"
                ],
                "summary": "Update the specified Type User",
                "operationId": "a3d3869783bdbcb9cac8429bcdb93e03",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the TypeUser",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Admin"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "fas fa-user"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "TypeUser updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeUser"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "TypeUser not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "TypeUser not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "TypeUser"
                ],
                "summary": "Remove the specified TypeUser",
                "operationId": "dff9bb9222bd102c54b4eddd061e9284",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the TypeUser",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TypeUser deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "TypeUser deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "TypeUser not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "TypeUser not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/typeUser/setAccess": {
            "post": {
                "tags": [
                    "TypeUser"
                ],
                "summary": "Set Access for a Type User",
                "operationId": "3f0a7ac6b527d27724a98b1bef44db14",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "typeUser_id",
                                    "accesses"
                                ],
                                "properties": {
                                    "typeUser_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "accesses": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Accesses set for Type User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeUser"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "TypeUser not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "TypeUser not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/typeVehicle": {
            "get": {
                "tags": [
                    "Type Vehicle"
                ],
                "summary": "Get all Type Vehicles",
                "operationId": "8efe7275401984879531f221441725bb",
                "responses": {
                    "200": {
                        "description": "List of active Type Vehicles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TypeVehicle"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/typevehicle?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/typevehicle?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/typevehicle"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 15
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Type Vehicle"
                ],
                "summary": "Create a new Type Vehicle",
                "operationId": "85f12b82c47cacf6888db13fc822ed68",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Carro"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Type Vehicle created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeVehicle"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/typeVehicle/{id}": {
            "get": {
                "tags": [
                    "Type Vehicle"
                ],
                "summary": "Show a Type Vehicle",
                "operationId": "d7ffa54eb0f3b09c1125e9cf9744f495",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Type Vehicle",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Type Vehicle found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeVehicle"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Type Vehicle not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Type Vehicle not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Type Vehicle"
                ],
                "summary": "Update a Type Vehicle",
                "operationId": "03a0d98b9550b468d171e801cf540c8b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Type Vehicle",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Moto"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Type Vehicle updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeVehicle"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Type Vehicle not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Type Vehicle not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Type Vehicle"
                ],
                "summary": "Delete a Type Vehicle",
                "operationId": "2f01d89adb835e56d63d0b4a8c01eda8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Type Vehicle",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Type Vehicle deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Type Vehicle deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Type Vehicle not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Type Vehicle not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Type Vehicle cannot be deleted because it has related vehicles."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/unit": {
            "get": {
                "tags": [
                    "Unit"
                ],
                "summary": "Get all units",
                "operationId": "02b595f1eea841709bfcfdc641ee44ef",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Unit"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://localhost:8000/api/unit?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://localhost:8000/api/unit"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": "15"
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Unit"
                ],
                "summary": "Create a new unit",
                "operationId": "3df66ba655faa63f847dcd5c5fea6a3d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/unit/{id}": {
            "get": {
                "tags": [
                    "Unit"
                ],
                "summary": "Get a unit by id",
                "operationId": "b4b127ddb79a0b69c7c99856e49fedb1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unit id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Unit"
                ],
                "summary": "Update a unit",
                "operationId": "cdb3dfca03b098e6e5514306adf4e45d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unit id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Unit"
                ],
                "summary": "Delete a unit",
                "operationId": "65ee373a0647cc3c511c1be6712e1987",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unit id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Cannot delete unit with products"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all Group menus",
                "operationId": "61fe647dbdfbe0383d70ae7511a1f1b2",
                "responses": {
                    "200": {
                        "description": "List of active Users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Store a new user",
                "operationId": "c2a546de531d2506070dfe15de97583f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password",
                                    "typeofUser_id",
                                    "worker_id"
                                ],
                                "properties": {
                                    "username": {
                                        "description": "Username of the user",
                                        "type": "string",
                                        "example": "username"
                                    },
                                    "password": {
                                        "description": "Password of the user",
                                        "type": "string",
                                        "example": "12345678"
                                    },
                                    "typeofUser_id": {
                                        "description": "Type of user",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "worker_id": {
                                        "description": "Worker of user",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/user/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Show the specified Group menu",
                "operationId": "ecb19a9af137e070d51eb00228facb5e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the User",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found"
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user by ID",
                "operationId": "affc0ad26498e0690a049f9275e0b8dc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password",
                                    "typeofUser_id",
                                    "worker_id"
                                ],
                                "properties": {
                                    "username": {
                                        "description": "Username of the user",
                                        "type": "string",
                                        "example": "username"
                                    },
                                    "password": {
                                        "description": "Password of the user",
                                        "type": "string",
                                        "example": "12345678"
                                    },
                                    "typeofUser_id": {
                                        "description": "Type of user",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "worker_id": {
                                        "description": "Worker of user",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User  not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Remove the specified Group menu",
                "operationId": "3e373909977f7056a7590e84794b6134",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the User",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User has option menus associated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User has option menus associated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/vehicle": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Get all Vehicles",
                "operationId": "5f1b61410d17587445e1451b6f61e202",
                "responses": {
                    "200": {
                        "description": "List of active Vehicles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/VehicleCollection"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/vehicle?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/vehicle?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/vehicle"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 15
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Create a new Vehicle",
                "operationId": "b09d7f760cfe7a8b7498a41b990dd231",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vehicle created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The plate field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/vehicle/{id}": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Get a Vehicle",
                "operationId": "6c2ab9bcade9706b2c273756041cb22d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Update a Vehicle",
                "operationId": "4825605280308b93af36e3cb0007bcd2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vehicle updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The plate field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Delete a Vehicle",
                "operationId": "aebb8e0d7ace8d48d0d5514e2efa6db5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle has attentions"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/vehicleByPerson/{id}": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Get all Vehicles by Person",
                "operationId": "c2260eda219f0b40366e6423863e515b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Person ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of active Vehicles by Person",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleCollection"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Person not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Person not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/vehicleModel": {
            "get": {
                "tags": [
                    "VehicleModel"
                ],
                "summary": "List of vehicle models",
                "operationId": "a6af10cf9e0962d04848bc0361e8bd6d",
                "parameters": [
                    {
                        "name": "brand_id",
                        "in": "query",
                        "description": "Brand ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of vehicle models",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VehicleModel"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "VehicleModel"
                ],
                "summary": "Create a vehicle model",
                "operationId": "0594d76a527727a5124daefcddb3961d",
                "requestBody": {
                    "description": "VehicleModel data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleModelRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vehicle model created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/vehicleModel/{id}": {
            "get": {
                "tags": [
                    "VehicleModel"
                ],
                "summary": "Show a vehicle model",
                "operationId": "048e1140c7e20fc3c58eaa89aa3d9b06",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle model ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle model",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle model not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle model not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "VehicleModel"
                ],
                "summary": "Update a vehicle model",
                "operationId": "f3047e3f390b6c297ce6cd1e98f5bdeb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle model ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "VehicleModel data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleModelRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vehicle model updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle model not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle model not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "VehicleModel"
                ],
                "summary": "Delete a vehicle model",
                "operationId": "f348b8e61d2a7c998a97b9b86c210857",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle model ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle model deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle model deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle model not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle model not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthenticated"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/worker": {
            "get": {
                "tags": [
                    "Worker"
                ],
                "summary": "Get all Workers",
                "operationId": "27949dc3f4c5c6d49e07337a50da883e",
                "parameters": [
                    {
                        "name": "speciality_id",
                        "in": "query",
                        "description": "ID of the Specialty to filter Workers",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "occupation",
                        "in": "query",
                        "description": "Occupation of the Workers",
                        "required": false,
                        "example": "Mecanico"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of active Workers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Worker"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Worker"
                ],
                "summary": "Store a new worker",
                "operationId": "251a5c7956dd86cb4a740744c0c784c4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "person_id"
                                ],
                                "properties": {
                                    "startDate": {
                                        "description": "StartDate of the worker",
                                        "type": "string",
                                        "example": null
                                    },
                                    "birthDate": {
                                        "description": "BirthDate of the worker",
                                        "type": "string",
                                        "example": null
                                    },
                                    "occupation": {
                                        "description": "Occupationi of the worker",
                                        "type": "string",
                                        "example": "-"
                                    },
                                    "person_id": {
                                        "description": "Worker ID",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Worker"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/worker/{id}": {
            "get": {
                "tags": [
                    "Worker"
                ],
                "summary": "Show the specified Worker",
                "operationId": "8d7c4a85ab831fbce720d7db20864bc9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Worker",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Worker found"
                    },
                    "404": {
                        "description": "Worker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Worker not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update worker by ID",
                "operationId": "9e955179c8eab2dcec72c57259dff609",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of worker",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "person_id"
                                ],
                                "properties": {
                                    "startDate": {
                                        "description": "StartDate of the worker",
                                        "type": "string",
                                        "example": null
                                    },
                                    "birthDate": {
                                        "description": "BirthDate of the worker",
                                        "type": "string",
                                        "example": null
                                    },
                                    "occupation": {
                                        "description": "Occupationi of the worker",
                                        "type": "string",
                                        "example": "-"
                                    },
                                    "person_id": {
                                        "description": "Worker ID",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Worker"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User  not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Worker"
                ],
                "summary": "Remove the specified Worker",
                "operationId": "ab90fad233e4c8d0aa64d55fdba4a456",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Worker",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Worker deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Worker deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Worker not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Worker not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Authenticate user and generate access token",
                "operationId": "cf1667c332d56452678713ad04d37ccb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "username"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User authenticated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "1|1a2b3c4d5e6f7g8h9i0j"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "group_menus": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GroupMenu"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Credentials are invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tecnimotors-backend/public/api/authenticate": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get Profile user",
                "description": "Get user",
                "operationId": "f0d787f13c48afcdd1e50c43894d8521",
                "responses": {
                    "200": {
                        "description": "User authenticated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "menu": {
                                            "type": "array",
                                            "items": {
                                                "description": "Menú",
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tecnimotors-backend/public/api/logout": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "description": "Log out user.",
                "operationId": "e010ae3640f1e83866bf2dc20ce5b7f6",
                "responses": {
                    "200": {
                        "description": "Successful logout"
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "An error occurred while trying to log out. Please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ValidationError": {
                "properties": {
                    "error": {
                        "type": "string",
                        "example": "The pagination must be an integer."
                    }
                },
                "type": "object"
            },
            "Unauthenticated": {
                "properties": {
                    "error": {
                        "type": "string",
                        "example": "Unauthenticated."
                    }
                },
                "type": "object"
            },
            "CommitmentResource": {
                "title": "Commitment",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "number": {
                        "type": "string",
                        "example": "0001"
                    },
                    "client": {
                        "type": "string",
                        "example": "Juan Perez"
                    },
                    "payment_type": {
                        "type": "string",
                        "example": "Semanal"
                    },
                    "payment_date": {
                        "type": "string",
                        "example": "2024-06-27 22:59:36"
                    },
                    "price": {
                        "type": "decimal",
                        "example": "1000.00"
                    },
                    "amount_paid": {
                        "type": "decimal",
                        "example": "100.00"
                    },
                    "balance": {
                        "type": "decimal",
                        "example": "900.00"
                    },
                    "dues": {
                        "type": "integer",
                        "example": "10"
                    },
                    "status": {
                        "type": "string",
                        "example": "Pendiente"
                    },
                    "budget_sheet_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2024-06-27 22:59:36"
                    }
                },
                "type": "object"
            },
            "CommitmentCollectionPagination": {
                "title": "CommitmentCollectionPagination",
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": "1"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommitmentResource"
                        }
                    },
                    "first_page_url": {
                        "type": "string",
                        "example": "https://develop.garzasoft.com/tecnimotors-backend/public/api/commitment?page=1"
                    },
                    "from": {
                        "type": "integer",
                        "example": "1"
                    },
                    "next_page_url": {
                        "type": "string",
                        "example": "null"
                    },
                    "path": {
                        "type": "string",
                        "example": "https://develop.garzasoft.com/tecnimotors-backend/public/api/commitment"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": "5"
                    },
                    "prev_page_url": {
                        "type": "string",
                        "example": "null"
                    },
                    "to": {
                        "type": "integer",
                        "example": "5"
                    }
                },
                "type": "object"
            },
            "Access": {
                "title": "Access",
                "properties": {
                    "id": {
                        "type": "number",
                        "example": "1"
                    },
                    "typeuser_id": {
                        "type": "number",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "optionmenu": {
                        "$ref": "#/components/schemas/OptionMenu"
                    },
                    "typeuser": {
                        "$ref": "#/components/schemas/TypeUser"
                    }
                },
                "type": "object"
            },
            "Attention": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "number": {
                        "type": "string",
                        "example": "12345"
                    },
                    "arrivalDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-05-21"
                    },
                    "deliveryDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-05-22"
                    },
                    "observations": {
                        "type": "string",
                        "example": "Some observations here."
                    },
                    "fuelLevel": {
                        "type": "integer",
                        "example": "80"
                    },
                    "km": {
                        "type": "integer",
                        "example": "15000"
                    },
                    "routeImage": {
                        "type": "string",
                        "example": "/image.jpg"
                    },
                    "totalService": {
                        "type": "number",
                        "example": "100.00"
                    },
                    "totalProducts": {
                        "type": "number",
                        "example": "200.00"
                    },
                    "total": {
                        "type": "number",
                        "example": "300.00"
                    },
                    "debtAmount": {
                        "type": "number",
                        "example": "100.00"
                    },
                    "percentage": {
                        "type": "integer",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-21 04:09:25"
                    },
                    "worker": {
                        "$ref": "#/components/schemas/Worker"
                    },
                    "vehicle": {
                        "$ref": "#/components/schemas/Vehicle"
                    },
                    "RouteImages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RouteImages"
                        }
                    }
                },
                "type": "object"
            },
            "Bank": {
                "title": "Bank",
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Bank 1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-22 00:41:38"
                    }
                },
                "type": "object"
            },
            "BankRequest": {
                "title": "BankRequest",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Bank 1"
                    }
                },
                "type": "object"
            },
            "Brand": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Brand 1"
                    },
                    "type": {
                        "type": "string",
                        "example": "Type 1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-04-24 12:27:41"
                    }
                },
                "type": "object"
            },
            "Category": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Category 1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-04-24 12:27:41"
                    }
                },
                "type": "object"
            },
            "CategoryRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Category 1"
                    }
                },
                "type": "object"
            },
            "CommitmentRequest": {
                "title": "CommitmentRequest",
                "required": [
                    "amount",
                    "dues"
                ],
                "properties": {
                    "amount": {
                        "description": "REQUEST SCHEMA",
                        "type": "decimal",
                        "example": "1000.00"
                    },
                    "dues": {
                        "type": "integer",
                        "example": "10"
                    },
                    "payment_date": {
                        "type": "string",
                        "example": "2024-06-27 22:59:36"
                    },
                    "payment_type": {
                        "type": "string",
                        "example": "Semanal"
                    },
                    "budget_sheet_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "Commitment": {
                "title": "Commitment",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "dues": {
                        "type": "integer",
                        "example": "10"
                    },
                    "amount": {
                        "type": "decimal",
                        "example": "1000.00"
                    },
                    "balance": {
                        "type": "decimal",
                        "example": "900.00"
                    },
                    "payment_date": {
                        "type": "string",
                        "example": "2024-06-27 22:59:36"
                    },
                    "payment_type": {
                        "type": "string",
                        "example": "Semanal"
                    },
                    "status": {
                        "type": "string",
                        "example": "Pendiente"
                    },
                    "budget_sheet_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2024-06-27 22:59:36"
                    }
                },
                "type": "object"
            },
            "ConceptMov": {
                "title": "ConceptMov",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "ConceptMov 1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-22 00:43:09"
                    }
                },
                "type": "object"
            },
            "ConceptMovRequest": {
                "title": "ConceptMovRequest",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "ConceptMov 1"
                    }
                },
                "type": "object"
            },
            "ConceptPay": {
                "title": "ConceptPay",
                "required": [
                    "number",
                    "name",
                    "type"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "number": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "ConceptPay 1"
                    },
                    "type": {
                        "type": "string",
                        "example": "Ingreso"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-22 00:41:38"
                    }
                },
                "type": "object"
            },
            "ConceptPayRequest": {
                "title": "ConceptPayRequest",
                "required": [
                    "name",
                    "type"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "ConceptPay 1"
                    },
                    "type": {
                        "type": "string",
                        "example": "Ingreso"
                    }
                },
                "type": "object"
            },
            "DetailAttention": {
                "required": [
                    "salePrice",
                    "attention_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "salePrice": {
                        "type": "decimal",
                        "example": "0.00"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "1"
                    },
                    "type": {
                        "type": "string",
                        "example": "Producto"
                    },
                    "comment": {
                        "type": "string",
                        "example": "comment"
                    },
                    "status": {
                        "type": "string",
                        "example": "Generada"
                    },
                    "dateRegister": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-04-24"
                    },
                    "dateMax": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-04-24"
                    },
                    "dateCurrent": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-04-24"
                    },
                    "percentage": {
                        "type": "integer",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-04-24 12:27:41"
                    },
                    "attention_id": {
                        "type": "integer",
                        "example": "Attention 1"
                    },
                    "service_id": {
                        "type": "integer",
                        "example": "service 1"
                    },
                    "product_id": {
                        "type": "integer",
                        "example": "product 1"
                    },
                    "worker_id": {
                        "type": "integer",
                        "example": "worker 1"
                    },
                    "attention": {
                        "$ref": "#/components/schemas/Attention"
                    },
                    "service": {
                        "$ref": "#/components/schemas/Service"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "worker": {
                        "$ref": "#/components/schemas/Worker"
                    }
                },
                "type": "object"
            },
            "DetailAttentionNoRelations": {
                "required": [
                    "salePrice",
                    "attention_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "salePrice": {
                        "type": "decimal",
                        "example": "0.00"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "1"
                    },
                    "type": {
                        "type": "string",
                        "example": "Producto"
                    },
                    "comment": {
                        "type": "string",
                        "example": "comment"
                    },
                    "status": {
                        "type": "string",
                        "example": "Generada"
                    },
                    "dateRegister": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-04-24"
                    },
                    "dateMax": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-04-24"
                    },
                    "dateCurrent": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-04-24"
                    },
                    "percentage": {
                        "type": "integer",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-04-24 12:27:41"
                    },
                    "attention_id": {
                        "type": "integer",
                        "example": "Attention 1"
                    },
                    "service_id": {
                        "type": "integer",
                        "example": "service 1"
                    },
                    "product_id": {
                        "type": "integer",
                        "example": "product 1"
                    },
                    "worker_id": {
                        "type": "integer",
                        "example": "worker 1"
                    }
                },
                "type": "object"
            },
            "DetailAttentionRequestUpdate": {
                "required": [
                    "salePrice",
                    "attention_id"
                ],
                "properties": {
                    "salePrice": {
                        "type": "decimal",
                        "example": "100.00"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "DetailAttentionRequest": {
                "required": [
                    "salePrice",
                    "quantity"
                ],
                "properties": {
                    "salePrice": {
                        "type": "decimal",
                        "example": "0.00"
                    },
                    "type": {
                        "type": "string",
                        "example": "Producto"
                    },
                    "comment": {
                        "type": "string",
                        "example": "comment"
                    },
                    "attention_id": {
                        "type": "integer",
                        "example": "Attention 1"
                    },
                    "service_id": {
                        "type": "integer",
                        "example": "service 1"
                    },
                    "product_id": {
                        "type": "integer",
                        "example": "product 1"
                    },
                    "worker_id": {
                        "type": "integer",
                        "example": "worker 1"
                    },
                    "dateRegister": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-04-24"
                    },
                    "dateMax": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-04-24"
                    }
                },
                "type": "object"
            },
            "DetailAttentionService": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "salePrice": {
                        "type": "decimal",
                        "example": "0.00"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "1"
                    },
                    "type": {
                        "type": "string",
                        "example": "Producto"
                    },
                    "comment": {
                        "type": "string",
                        "example": "comment"
                    },
                    "status": {
                        "type": "string",
                        "example": "Generada"
                    },
                    "dateRegister": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-04-24"
                    },
                    "dateMax": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-04-24"
                    },
                    "dateCurrent": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-04-24"
                    },
                    "percentage": {
                        "type": "integer",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-04-24 12:27:41"
                    },
                    "service_id": {
                        "type": "integer",
                        "example": "service 1"
                    },
                    "service": {
                        "$ref": "#/components/schemas/Service"
                    }
                },
                "type": "object"
            },
            "DetailAttentionServicePaginate": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": "1"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DetailAttentionService"
                        }
                    },
                    "first_page_url": {
                        "type": "string",
                        "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/detailAttention?page=1"
                    },
                    "from": {
                        "type": "integer",
                        "example": "1"
                    },
                    "next_page_url": {
                        "type": "string",
                        "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/detailAttention?page=2"
                    },
                    "path": {
                        "type": "string",
                        "example": "http://develop.garzasoft.com/tecnimotors-backend/public/api/detailAttention"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": "15"
                    },
                    "prev_page_url": {
                        "type": "string",
                        "example": "null"
                    },
                    "to": {
                        "type": "integer",
                        "example": "15"
                    }
                },
                "type": "object"
            },
            "Element": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Element 1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-21 04:09:25"
                    }
                },
                "type": "object"
            },
            "ElementForAttention": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "element_id": {
                        "type": "integer",
                        "example": "Element 1"
                    },
                    "attention_id": {
                        "type": "integer",
                        "example": "Element 1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-21 04:09:25"
                    },
                    "element": {
                        "$ref": "#/components/schemas/Element"
                    },
                    "attention": {
                        "$ref": "#/components/schemas/Attention"
                    }
                },
                "type": "object"
            },
            "GroupMenu": {
                "title": "GroupMenu",
                "required": [
                    "id",
                    "name",
                    "icon"
                ],
                "properties": {
                    "id": {
                        "type": "number",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Admin"
                    },
                    "icon": {
                        "type": "string",
                        "example": "fas fa-user"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2024-03-27 01:42:21"
                    },
                    "option_menus": {
                        "$ref": "#/components/schemas/OptionMenu"
                    }
                },
                "type": "object"
            },
            "MovimentRequest": {
                "title": "moviment",
                "description": "Movimiento",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "description": "ID del moviment",
                        "type": "integer"
                    },
                    "sequentialNumber": {
                        "description": "Número secuencial",
                        "type": "string",
                        "nullable": true
                    },
                    "paymentDate": {
                        "description": "Fecha de pago",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "total": {
                        "description": "Total",
                        "type": "number",
                        "format": "decimal",
                        "nullable": true
                    },
                    "yape": {
                        "description": "Pago por Yape",
                        "type": "number",
                        "format": "decimal",
                        "nullable": true
                    },
                    "deposit": {
                        "description": "Depósito",
                        "type": "number",
                        "format": "decimal",
                        "nullable": true
                    },
                    "cash": {
                        "description": "Efectivo",
                        "type": "number",
                        "format": "decimal",
                        "nullable": true
                    },
                    "card": {
                        "description": "Pago por tarjeta",
                        "type": "number",
                        "format": "decimal",
                        "nullable": true
                    },
                    "plin": {
                        "description": "Pago por tarjeta",
                        "type": "number",
                        "format": "decimal",
                        "nullable": true
                    },
                    "typeDocument": {
                        "description": "Tipo de documento",
                        "type": "string",
                        "nullable": true
                    },
                    "isBankPayment": {
                        "description": "Tipo de documento",
                        "type": "boolean",
                        "nullable": true
                    },
                    "numberVoucher": {
                        "description": "Tipo de documento",
                        "type": "string",
                        "nullable": true
                    },
                    "routeVoucher": {
                        "description": "Tipo de documento",
                        "type": "string",
                        "nullable": true
                    },
                    "comment": {
                        "description": "Comentario",
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "description": "Estado",
                        "type": "string",
                        "nullable": true
                    },
                    "conceptMov_id": {
                        "description": "ID del concepto de movimiento",
                        "type": "integer",
                        "nullable": true
                    },
                    "user_id": {
                        "description": "ID del usuario",
                        "type": "integer",
                        "nullable": true
                    },
                    "person_id": {
                        "description": "ID de persona",
                        "type": "integer",
                        "nullable": true
                    },
                    "bank_id": {
                        "description": "ID del banco",
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "OptionMenu": {
                "title": "OptionMenu",
                "required": [
                    "id",
                    "name",
                    "icon",
                    "groupmenu_id"
                ],
                "properties": {
                    "id": {
                        "type": "number",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Principal"
                    },
                    "route": {
                        "type": "string",
                        "example": "principal"
                    },
                    "icon": {
                        "type": "string",
                        "example": "fas fa-user"
                    },
                    "groupmenu_id": {
                        "type": "string",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2024-03-27 01:42:21"
                    }
                },
                "type": "object"
            },
            "Person": {
                "title": "Person",
                "required": [
                    "id",
                    "typeofDocument",
                    "documentNumber"
                ],
                "properties": {
                    "id": {
                        "type": "number",
                        "example": "1"
                    },
                    "typeofDocument": {
                        "type": "string",
                        "example": "DNI"
                    },
                    "documentNumber": {
                        "type": "string",
                        "example": "12345678"
                    },
                    "names": {
                        "type": "string",
                        "example": "John"
                    },
                    "fatherSurname": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "motherSurname": {
                        "type": "string",
                        "example": "Smith"
                    },
                    "businessName": {
                        "type": "string",
                        "example": "Doe Enterprises"
                    },
                    "representativeDni": {
                        "type": "string",
                        "example": "87654321"
                    },
                    "representativeNames": {
                        "type": "string",
                        "example": "Jane Doe"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "origin": {
                        "type": "string",
                        "example": "City"
                    },
                    "ocupation": {
                        "type": "string",
                        "example": "Engineer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "product name"
                    },
                    "purchase_price": {
                        "type": "number",
                        "example": "100.00"
                    },
                    "percentage": {
                        "type": "number",
                        "example": "10.00"
                    },
                    "sale_price": {
                        "type": "number",
                        "example": "110.00"
                    },
                    "stock": {
                        "type": "number",
                        "example": "100"
                    },
                    "quantity": {
                        "type": "number",
                        "example": "10"
                    },
                    "type": {
                        "type": "string",
                        "example": "product type"
                    },
                    "category_id": {
                        "type": "integer",
                        "example": "2"
                    },
                    "unit_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "brand_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "category": {
                        "$ref": "#/components/schemas/Category"
                    },
                    "unit": {
                        "$ref": "#/components/schemas/Unit"
                    },
                    "brand": {
                        "$ref": "#/components/schemas/Brand"
                    }
                },
                "type": "object"
            },
            "ProductNoRelations": {
                "title": "Product",
                "description": "Product model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "product name"
                    },
                    "purchase_price": {
                        "type": "number",
                        "example": "100.00"
                    },
                    "percentage": {
                        "type": "number",
                        "example": "10.00"
                    },
                    "sale_price": {
                        "type": "number",
                        "example": "110.00"
                    },
                    "stock": {
                        "type": "number",
                        "example": "100"
                    },
                    "quantity": {
                        "type": "number",
                        "example": "10"
                    },
                    "type": {
                        "type": "string",
                        "example": "product type"
                    },
                    "category_id": {
                        "type": "integer",
                        "example": "2"
                    },
                    "unit_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "brand_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ProductRequest": {
                "title": "ProductRequest",
                "description": "Product request model",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "product name"
                    },
                    "purchase_price": {
                        "type": "number",
                        "example": "100.00"
                    },
                    "percentage": {
                        "type": "number",
                        "example": "10.00"
                    },
                    "sale_price": {
                        "type": "number",
                        "example": "110.00"
                    },
                    "stock": {
                        "type": "number",
                        "example": "100"
                    },
                    "quantity": {
                        "type": "number",
                        "example": "10"
                    },
                    "type": {
                        "type": "string",
                        "example": "product type"
                    },
                    "category_id": {
                        "type": "integer",
                        "example": "2"
                    },
                    "unit_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "brand_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "RouteImages": {
                "title": "RouteImages",
                "description": "Route Image model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "route": {
                        "type": "string",
                        "example": "Image route"
                    },
                    "attention_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "task_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Service": {
                "title": "Service",
                "required": [
                    "name",
                    "quantity",
                    "saleprice",
                    "time"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Service 1"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "1"
                    },
                    "saleprice": {
                        "type": "number",
                        "format": "float",
                        "example": "100.00"
                    },
                    "time": {
                        "type": "number",
                        "format": "float",
                        "example": "2.5"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-22 00:41:38"
                    }
                },
                "type": "object"
            },
            "ServiceRequest": {
                "title": "ServiceRequest",
                "required": [
                    "name",
                    "quantity",
                    "saleprice",
                    "time"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Service 1"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "1"
                    },
                    "saleprice": {
                        "type": "number",
                        "format": "float",
                        "example": "100.00"
                    },
                    "time": {
                        "type": "number",
                        "format": "float",
                        "example": "2.5"
                    }
                },
                "type": "object"
            },
            "Specialty": {
                "title": "Specialty",
                "properties": {
                    "id": {
                        "type": "number",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Especialidad"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "SpecialtyPerson": {
                "title": "SpecialtyPerson",
                "properties": {
                    "id": {
                        "type": "number",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Especialidad"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "Supplier": {
                "title": "Supplier",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-05-22"
                    },
                    "category": {
                        "type": "string",
                        "example": "Category 1"
                    },
                    "person_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-22T00:00:00.000000Z"
                    },
                    "person": {
                        "$ref": "#/components/schemas/Person"
                    }
                },
                "type": "object"
            },
            "SupplierRequest": {
                "title": "SupplierRequest",
                "required": [
                    "date",
                    "category",
                    "person_id"
                ],
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-05-22"
                    },
                    "category": {
                        "type": "string",
                        "example": "Category 1"
                    },
                    "person_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "Task": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "description": {
                        "type": "string",
                        "example": "Task 1"
                    },
                    "status": {
                        "type": "string",
                        "example": "Task 1"
                    },
                    "registerDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-21"
                    },
                    "limitDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-21"
                    },
                    "worker_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "detail_attentions_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "worker": {
                        "$ref": "#/components/schemas/Worker"
                    },
                    "detailAttentions": {
                        "$ref": "#/components/schemas/DetailAttention"
                    }
                },
                "type": "object"
            },
            "TaskNoRelations": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "description": {
                        "type": "string",
                        "example": "Task 1"
                    },
                    "status": {
                        "type": "string",
                        "example": "Task 1"
                    },
                    "registerDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-21"
                    },
                    "limitDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-21"
                    },
                    "worker_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "detail_attentions_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "TaskRequest": {
                "required": [
                    "description",
                    "detail_attentions_id"
                ],
                "properties": {
                    "description": {
                        "type": "string",
                        "example": "Task 1"
                    },
                    "registerDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-21"
                    },
                    "limitDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-21"
                    },
                    "detail_attentions_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "TaskUpdate": {
                "properties": {
                    "description": {
                        "type": "string",
                        "example": "Task 1"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "hacer",
                            "curso",
                            "listo"
                        ],
                        "example": "hacer"
                    },
                    "limitDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-21"
                    }
                },
                "type": "object"
            },
            "TaskPaginate": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": "1"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        }
                    },
                    "first_page_url": {
                        "type": "string",
                        "example": "http://localhost:8000/api/v1/tasks?page=1"
                    },
                    "from": {
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page_url": {
                        "type": "string",
                        "example": "http://localhost:8000/api/v1/tasks?page=1"
                    },
                    "next_page_url": {
                        "type": "string",
                        "example": "http://localhost:8000/api/v1/tasks?page=1"
                    },
                    "path": {
                        "type": "string",
                        "example": "http://localhost:8000/api/v1/tasks"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": "15"
                    },
                    "prev_page_url": {
                        "type": "string",
                        "example": "http://localhost:8000/api/v1/tasks?page=1"
                    },
                    "to": {
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "TaskImages": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "url": {
                        "type": "string",
                        "example": "http://localhost:8000/storage/tasks/1/image.jpg"
                    },
                    "task_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "TaskImagesRequest": {
                "required": [
                    "image"
                ],
                "properties": {
                    "image": {
                        "description": "Evidence of the task",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "TypeAttention": {
                "title": "TypeAttention",
                "properties": {
                    "id": {
                        "type": "number",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Consulta"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-21 03:02:20"
                    }
                },
                "type": "object"
            },
            "TypeUser": {
                "title": "TypeUser",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "number",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Administrador"
                    }
                },
                "type": "object"
            },
            "TypeVehicle": {
                "title": "TypeVehicle",
                "properties": {
                    "id": {
                        "type": "number",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Carro"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-21 03:02:20"
                    }
                },
                "type": "object"
            },
            "Unit": {
                "title": "Unit",
                "required": [
                    "name",
                    "code"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Kilogram"
                    },
                    "code": {
                        "type": "string",
                        "example": "kg"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-04-14T17:59:10.000000Z"
                    }
                },
                "type": "object"
            },
            "UnitRequest": {
                "title": "UnitRequest",
                "required": [
                    "name",
                    "code"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Kilogram"
                    },
                    "code": {
                        "type": "string",
                        "example": "kg"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "required": [
                    "id",
                    "username",
                    "password",
                    "worker_id",
                    "typeofUser_id"
                ],
                "properties": {
                    "id": {
                        "type": "number",
                        "example": "1"
                    },
                    "username": {
                        "type": "string",
                        "example": "johndoe"
                    },
                    "password": {
                        "type": "string",
                        "example": "password123"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "worker_id": {
                        "description": "Foreign key referencing Worker",
                        "type": "number",
                        "example": "1"
                    },
                    "typeofUser_id": {
                        "description": "Foreign key referencing TypeOfUser",
                        "type": "number",
                        "example": "1"
                    },
                    "worker": {
                        "$ref": "#/components/schemas/Worker"
                    },
                    "TypeUser": {
                        "$ref": "#/components/schemas/TypeUser"
                    }
                },
                "type": "object"
            },
            "Vehicle": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "plate": {
                        "type": "string",
                        "example": "ABC123"
                    },
                    "km": {
                        "type": "number",
                        "example": "15000"
                    },
                    "year": {
                        "type": "integer",
                        "example": "2020"
                    },
                    "model": {
                        "type": "string",
                        "example": "Model 1"
                    },
                    "chasis": {
                        "type": "string",
                        "example": "Chasis 1"
                    },
                    "motor": {
                        "type": "string",
                        "example": "Motor 1"
                    },
                    "person_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "typeVehicle_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "brand_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-06-15 09:00:00"
                    }
                },
                "type": "object"
            },
            "VehicleCollection": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "plate": {
                        "type": "string",
                        "example": "ABC123"
                    },
                    "km": {
                        "type": "number",
                        "example": "15000"
                    },
                    "year": {
                        "type": "integer",
                        "example": "2020"
                    },
                    "model": {
                        "type": "string",
                        "example": "Model 1"
                    },
                    "chasis": {
                        "type": "string",
                        "example": "Chasis 1"
                    },
                    "motor": {
                        "type": "string",
                        "example": "Motor 1"
                    },
                    "person_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "typeVehicle_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "brand_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-06-15 09:00:00"
                    },
                    "person": {
                        "$ref": "#/components/schemas/Person"
                    },
                    "type_vehicle": {
                        "$ref": "#/components/schemas/TypeVehicle"
                    },
                    "brand": {
                        "$ref": "#/components/schemas/Brand"
                    }
                },
                "type": "object"
            },
            "VehicleRequest": {
                "properties": {
                    "plate": {
                        "type": "string",
                        "example": "ABC123"
                    },
                    "km": {
                        "type": "number",
                        "example": "15000"
                    },
                    "year": {
                        "type": "integer",
                        "example": "2020"
                    },
                    "model": {
                        "type": "string",
                        "example": "Model 1"
                    },
                    "chasis": {
                        "type": "string",
                        "example": "Chasis 1"
                    },
                    "motor": {
                        "type": "string",
                        "example": "Motor 1"
                    },
                    "codeBin": {
                        "type": "string",
                        "example": "123"
                    },
                    "person_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "typeVehicle_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "brand_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "VehicleModel": {
                "title": "VehicleModel",
                "required": [
                    "name",
                    "brand_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Gol"
                    },
                    "brand_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-08-01T00:00:00"
                    }
                },
                "type": "object"
            },
            "VehicleModelRequest": {
                "title": "VehicleModelRequest",
                "required": [
                    "name",
                    "brand_id"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Gol"
                    },
                    "brand_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "Worker": {
                "title": "Worker",
                "required": [
                    "id",
                    "occupation",
                    "person_id"
                ],
                "properties": {
                    "id": {
                        "type": "number",
                        "example": "1"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-01-01"
                    },
                    "birthDate": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-01"
                    },
                    "occupation": {
                        "type": "string",
                        "example": "Engineer"
                    },
                    "person_id": {
                        "description": "Foreign key referencing Person",
                        "type": "number",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "person": {
                        "$ref": "#/components/schemas/Person"
                    }
                },
                "type": "object"
            },
            "BudgetSheet": {
                "title": "BudgetSheet",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "number": {
                        "type": "string",
                        "example": "PRES-00000001"
                    },
                    "paymentType": {
                        "type": "string",
                        "example": "Al Contado"
                    },
                    "totalService": {
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "totalProducts": {
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "debtAmount": {
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "total": {
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "discount": {
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "subtotal": {
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "igv": {
                        "type": "number",
                        "format": "float",
                        "example": 0
                    },
                    "Attention": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attention"
                        }
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}